# If not running interactively, don't do anything
case $- in
  *i*) # interactive shell
    ;;
  *)   # non-interactive shell
    return
    ;;
esac

#-----------------------------------
# Source global definitions (if any)
#-----------------------------------

if [ -z "$USER" ]; then
    USER=${USERNAME:-"<user>"}
fi

# if [ -f /etc/bashrc ]; then
#         . /etc/bashrc   # --> Read /etc/bashrc, if present.
# fi

# extend the path to contain possible location of
# bash libraries
export BASH_LIB_PATH=${BASH_LIB_PATH:-$HOME/.bash}
export PATH=$PATH:$BASH_LIB_PATH

export HOSTFILE=$HOME/.hosts	# Put a list of remote hosts in ~/.hosts
export HOST=${HOST:-`uname -n`}

# This function will source foo or foo.bash
function source ()
{
#	echo "Bashlib path: $PATH"
	command source $* 2>/dev/null
	if [ $? -eq 1 ]; then
		S="$1.bash"
#        echo "    $S"
		shift
		command source $S $* 2>/dev/null
	fi
}
declare +x source

##
# _source all *.bashrc files
function dorc ()
{
    local P=$1
    shift
    if [ "$*" != "" ]; then
        dorc $*
    fi
    #echo "Sourcing $P"
    for SOURCE in $P/*.bashrc
    do
        #echo "    $SOURCE"
        source $SOURCE 2>/dev/null
    done
}
dorc ${BASH_LIB_PATH//:/ }

# Local Variables:
# mode:shell-script
# sh-shell:bash
# End:
